buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.6.0")
        classpath("net.serenity-bdd:serenity-single-page-report:2.6.0")
    }
}

plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.springframework.boot' version '2.7.10'
    id 'uk.gov.hmcts.java' version '0.12.43'
    id 'org.owasp.dependencycheck' version '8.2.1'
    id 'com.github.ben-manes.versions' version '0.46.0'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'jacoco'
    id 'checkstyle'
    id 'au.com.dius.pact' version '4.2.11'
    id "info.solidsoft.pitest" version '1.9.0'
    id 'com.github.hmcts.rse-cft-lib' version '0.19.632'
    id "io.freefair.lombok" version "8.0.1"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'

group 'uk.gov.hmcts.reform.dg.docassembly'
version '1.0.0'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

mainClassName = 'uk.gov.hmcts.reform.dg.docassembly.Application'

configurations {
    aatImplementation.extendsFrom(testImplementation)
    aatRuntimeOnly.extendsFrom(testRuntimeOnly)
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

def versions = [
        serenityRestAssured: '2.6.0',
        serenity           : '2.6.0',
        serenityreporter   : '2.6.0',
        fasterXmlJackson   : '2.14.0-rc1',
        pact_version       : '4.0.10',
        logging            : '5.1.7',
        junit5             : '5.8.2',
        log4JVersion       : '2.17.0',
        springSecurity     : '5.7.5'
]
sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations.all {
    exclude group: 'com.vaadin.external.google',module: 'android-json'
    exclude group: 'org.glassfish', module: 'jakarta.el'
    exclude group: 'io.netty', module: 'netty-buffer'
    exclude group: 'io.netty', module: 'netty-codec'
    exclude group: 'io.netty', module: 'netty-codec-http'
    exclude group: 'io.netty', module: 'netty-codec-http2'
    exclude group: 'io.netty', module: 'netty-common'
    exclude group: 'io.netty', module: 'netty-handler'
    exclude group: 'io.netty', module: 'netty-resolver'
    exclude group: 'io.netty', module: 'netty-transport'
    exclude group: 'io.netty', module: 'netty-transport-native-epoll'
    exclude group: 'io.netty', module: 'netty-transport-native-kqueue'
    exclude group: 'io.netty', module: 'netty-transport-native-unix-common'
    exclude group: 'org.springframework.security', module: 'spring-security-rsa'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
}

dependencies {

    def withoutStuff = {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
    }

    def withoutAlpnApi = {
        exclude group: 'org.eclipse.jetty.alpn', module: 'alpn-api'
    }

    def withoutCVE202011987 = {
        exclude group: 'org.apache.xmlgraphics', module: 'batik-all'
    }

    implementation group: 'org.json', name: 'json', version: '20230227'
    
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '12.2'
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.10.0'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: versions.fasterXmlJackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.fasterXmlJackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.fasterXmlJackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.fasterXmlJackson
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-afterburner', version: versions.fasterXmlJackson
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.8.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.15'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.zalando', name: 'problem-spring-web', version: '0.27.0'
    implementation group: 'pl.touk', name: 'throwing-function', version: '1.3'
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '4.1.2'
    implementation 'com.github.hmcts:ccd-case-document-am-client:1.59'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0', withoutCVE202011987
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '2.1.5'
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.logging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.logging

    implementation group: 'org.apache.tika', name: 'tika-core', version: '2.7.0'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.1.5'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-openfeign-core', version: '3.1.5'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.5'

    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', withoutStuff

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', withoutStuff
    testImplementation group: 'com.github.gmazzo', name: 'okhttp-mock', version: '1.5.0'

    testRuntimeOnly group: 'org.junit.vintage', name: 'junit-vintage-engine', version: versions.junit5
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit5
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit5

    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.3.0', classifier: 'all'
    
    //pact contract testing
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenityRestAssured, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter

    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius', name: 'pact-jvm-consumer-java8', version: versions.pact_version
    implementation group: 'au.com.dius', name: 'pact-jvm-consumer', version: versions.pact_version, withoutAlpnApi
    
    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit5
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit5

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    aatImplementation group: 'com.github.hmcts', name: 'em-test-helper', version: '1.21.9'

    cftlibImplementation 'org.springframework.boot:spring-boot-devtools'
}

processAatResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencyManagement {
    dependencies {

        //CVE-2021-27807, CVE-2021-27906
        dependencySet(group: 'org.apache.pdfbox', version: '2.0.27') {
            entry 'pdfbox'
        }

        //CVE-2021-35515, CVE-2021-35516, CVE-2021-35517, CVE-2021-36090
        dependencySet(group: 'org.apache.commons', version: '1.23.0') {
            entry 'commons-compress'
        }

        //CVE-2021-40690
        dependencySet(group: 'org.apache.santuario', version: '3.0.1') {
            entry 'xmlsec'
        }

        //CVE-2022-23437
        dependencySet(group: 'xerces', version: '2.12.2') {
            entry 'xercesImpl'
        }

        //CVE-2022-1471
        dependencySet(group: 'org.yaml', version: '2.0') {
            entry 'snakeyaml'
        }

        // CVE-2022-31692 - CVE-2022-31690
        dependencySet(group: 'org.springframework.security', version: '5.7.5') {
            entry 'spring-security-crypto'
            entry 'spring-security-core'
            entry 'spring-security-web'
        }

        //CVE-2022-45143
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.69') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-websocket'
        }

        //CVE-2022-40152
        dependencySet(group: 'com.fasterxml.woodstox', version: '6.5.0') {
            entry 'woodstox-core'
        }

        //CVE-2023-24998
        dependencySet(group: 'commons-fileupload', version: '1.5') {
            entry 'commons-fileupload'
        }
    }
}

bootJar {
    getArchiveFileName().set(provider {
        'rpa-dg-docassembly.jar'
    })

    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

def coverageExclusionList = [
    '**uk/gov/hmcts/reform/dg/docassembly/Application*',
    '**uk/gov/hmcts/reform/dg/docassembly/appinsights/*',
    '**uk/gov/hmcts/reform/dg/docassembly/dto/*',
    '**uk/gov/hmcts/reform/dg/docassembly/config/**/*',
    '**uk/gov/hmcts/reform/dg/docassembly/info/*'
    ]

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = false
        xml.destination file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.test.exclusions", "**/test/**"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

        property "sonar.issue.ignore.multicriteria", "e1"
        property "sonar.issue.ignore.multicriteria.e1.ruleKey", "java:S2629"
        property "sonar.issue.ignore.multicriteria.e1.resourceKey", "src/main/java/uk/gov/hmcts/reform/dg/docassembly/**"
    }
}


checkstyle {
    maxWarnings = 0
    toolVersion = '9.2.1'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

idea {
    module {
        testSourceDirs += project.sourceSets.aat.java.srcDirs
        testResourceDirs += project.sourceSets.aat.resources.srcDirs
        testSourceDirs += project.sourceSets.contractTest.java.srcDirs
        testResourceDirs += project.sourceSets.contractTest.resources.srcDirs
    }
}


// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

test {
    useJUnitPlatform()
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/dg/docassembly/functional/**"

    // Serenity Single page Reports
    // functional.finalizedBy(aggregate)

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/dg/docassembly/smoke/**"

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/dg/docassembly/**"
    systemProperty 'pact.rootDir', "pacts"
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

runAndPublishConsumerPactTests.dependsOn contract

runAndPublishConsumerPactTests.finalizedBy pactPublish

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

serenity {
    reports = ["single-page-html"]
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        version = project.pactVersion
    }
}

compileJava.dependsOn processResources

pitest {

    logger.lifecycle("Runs PIT  Tests")

    targetClasses = ['uk.gov.hmcts.reform.dg.docassembly.*']

    excludedClasses = [
            'uk.gov.hmcts.reform.dg.docassembly.appinsights.*' ,
            'uk.gov.hmcts.reform.dg.docassembly.info.*',
            'uk.gov.hmcts.reform.dg.docassembly.Application.java'
    ]

    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true

}

project.tasks['pitest'].group = "Verification"

task loadEnvSecrets() {
    doLast {
        if (!project.file('./.aat-env').exists()) {
            new ByteArrayOutputStream().withStream { os ->
                exec {
                    commandLine 'az', 'keyvault', 'secret', 'show', '--vault-name', 'dg-docassembly-aat', '-o', 'tsv', '--query', 'value', '--name', 'dg-docassembly-dot-env'
                    standardOutput = os
                }
                project.file('./.aat-env').write(new String(os.toString().replace('\n', '').decodeBase64(), java.nio.charset.StandardCharsets.UTF_8))
            }
        }
    }
}

task reloadEnvSecrets(group: 'ccd tasks', dependsOn: [loadEnvSecrets]) {
    doFirst {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').delete()
        }
    }
}

bootRun {
    doFirst() {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').readLines().each() {
                def index = it.indexOf("=")
                def key = it.substring(0, index)
                def value = it.substring(index + 1)
                environment key, value
            }
        }
    }
}

functional {
    doFirst() {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').readLines().each() {
                def index = it.indexOf("=")
                def key = it.substring(0, index)
                def value = it.substring(index + 1)
                environment key, value
            }
        }
    }
}

bootWithCCD {
    dependsOn(loadEnvSecrets)

    doFirst() {
        project.file('./.aat-env').readLines().each() {
            def index = it.indexOf("=")
            def key = it.substring(0, index)
            def value = it.substring(index + 1)
            environment key, value
        }

    }
    environment 'ENABLE_LIQUIBASE', true
    environment 'RSE_LIB_ADDITIONAL_DATABASES', 'emstitch'
    environment 'DATA_STORE_S2S_AUTHORISED_SERVICES', 'ccd_gw,ccd_data,ccd_ps,aac_manage_case_assignment,ccd_case_document_am_api,am_role_assignment_service,hmc_cft_hearing_service,prl_citizen_frontend,xui_webapp'
    environment 'S2S_URL', 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
    environment 'CASE_DOCUMENT_AM_API_S2S_SECRET','${CASE_DOCUMENT_AM_API_S2S_SECRET}'
    authMode = uk.gov.hmcts.rse.AuthMode.AAT
}

// exclude the logback binding is coming in via cftlib
configurations.cftlibTestImplementation {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
}
