
plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.springframework.boot' version '3.5.0'
    id 'uk.gov.hmcts.java' version '0.12.66'
    id 'org.owasp.dependencycheck' version '12.1.1'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'org.sonarqube' version '6.2.0.5505'
    id 'jacoco'
    id 'checkstyle'
    id 'au.com.dius.pact' version '4.6.17'
    id "info.solidsoft.pitest" version '1.15.0'
    id 'com.github.hmcts.rse-cft-lib' version '0.19.1748'
    id "io.freefair.lombok" version "8.13.1"
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.30'
}

apply plugin: 'java'
apply plugin: 'idea'

group 'uk.gov.hmcts.reform.dg.docassembly'
version '1.0.0'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

mainClassName = 'uk.gov.hmcts.reform.dg.docassembly.Application'

configurations {
    aatImplementation.extendsFrom(testImplementation)
    aatRuntimeOnly.extendsFrom(testRuntimeOnly)
}

def versions = [
        serenity           : '4.2.30',
        fasterXmlJackson   : '2.19.1',
        pact_version       : '4.6.17',
        logging            : '6.1.9',
        junit5             : '5.13.1',
        springSecurity     : '6.5.0'
]
sourceSets {
    aat {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }

    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }

    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations.all {
    exclude group: 'com.vaadin.external.google',module: 'android-json'
    exclude group: 'org.glassfish', module: 'jakarta.el'
    exclude group: 'org.springframework.security', module: 'spring-security-rsa'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-security'
}

dependencies {

    def withoutStuff = {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
    }

    def withoutPactExtras = {
        exclude group: 'org.jetbrains.kotlinx',   module: 'kotlinx-coroutines-io'
        exclude group: 'org.jetbrains.kotlinx',   module: 'kotlinx-io'
        exclude group: 'org.eclipse.jetty.alpn', module: 'alpn-api'
    }


    implementation group: 'org.json', name: 'json', version: '20250517'
    
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '13.6'
    implementation group: 'com.google.guava', name: 'guava', version: '33.4.8-jre'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-blackbird', version: versions.fasterXmlJackson
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.9.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.8'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    implementation group: 'org.zalando', name: 'problem-spring-web', version: '0.29.1'
    implementation group: 'pl.touk', name: 'throwing-function', version: '1.3'
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-resource-server', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-client', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: versions.springSecurity
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: versions.springSecurity


    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.4.1'
    implementation group: 'commons-validator', name: 'commons-validator', version: '1.9.0'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '20030211.134440'
    implementation group: 'commons-io', name: 'commons-io', version: '2.19.0'

    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.2'
    implementation group: 'com.github.hmcts', name: 'ccd-case-document-am-client', version: '1.59.2'

    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '3.1.1'
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.logging
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.logging
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '8.1'

    implementation group: 'org.apache.tika', name: 'tika-core', version: '3.2.0'

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '4.3.0'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.3.0'

    implementation group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.24'
    implementation group: 'org.aspectj', name: 'aspectjrt', version: '1.9.24'

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', withoutStuff
    testImplementation group: 'com.github.gmazzo.okhttp.mock', name: 'mock-client', version: '2.1.0'
    
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit5
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit5
    testRuntimeOnly group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.2'
    testRuntimeOnly group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '4.0.5'

    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.18'
    testImplementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.18'

    testImplementation group: 'com.github.hmcts', name: 'fortify-client', version: '1.4.9', classifier: 'all', {
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'org.apache.commons', module: 'commons-lang3'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
        exclude group: 'ch.qos.logback', module: 'logback-core'
    }

    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity, withoutStuff
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenity

    testImplementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '9.0.0.Final'

    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit', version: versions.pact_version, withoutPactExtras
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version, withoutPactExtras

    contractTestImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit5
    contractTestRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit5

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    aatImplementation group: 'uk.gov.hmcts.reform', name: 'em-test-helper', version:'2.2.0'

    cftlibImplementation 'org.springframework.boot:spring-boot-devtools'
}

processAatResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

processIntegrationTestResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

dependencyManagement {
    dependencies {
        dependencySet(group: 'com.fasterxml.jackson.core', version: '2.19.0') {
            entry 'jackson-core'
            entry 'jackson-databind'
            entry 'jackson-annotations'
        }

        //CVE-2024-26308, CVE-2024-25710
        dependencySet(group: 'org.apache.commons', version: '1.27.1') {
            entry 'commons-compress'
        }

        dependencySet(group: 'org.junit.platform', version: '1.13.1') {
            entry 'junit-platform-commons'
            entry 'junit-platform-engine'
        }
    }
}

bootJar {
    getArchiveFileName().set(provider {
        'rpa-dg-docassembly.jar'
    })

    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

checkstyle {
    maxWarnings = 0
    toolVersion = '10.25.0'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

dependencyCheck {
    suppressionFile = 'config/owasp/dependency-check-suppressions.xml'
}

idea {
    module {
        testSourceDirs += project.sourceSets.aat.java.srcDirs
        testResourceDirs += project.sourceSets.aat.resources.srcDirs
        testSourceDirs += project.sourceSets.contractTest.java.srcDirs
        testResourceDirs += project.sourceSets.contractTest.resources.srcDirs
    }
}


// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

test {
    useJUnitPlatform()
}

task functional(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes functional tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/dg/docassembly/functional/**"
    useJUnitPlatform()
    // Serenity Single page Reports
    // functional.finalizedBy(aggregate)

    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task smoke(type: Test) {
    group = 'Delivery pipeline'
    description = 'Executes non-destructive smoke tests'
    setTestClassesDirs(sourceSets.aat.output.classesDirs)
    setClasspath(sourceSets.aat.runtimeClasspath)
    include "uk/gov/hmcts/reform/dg/docassembly/smoke/**"
    useJUnitPlatform()
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

tasks.register('integration', Test) {
    failFast = true
    useJUnitPlatform()
    description = "Runs integration tests"
    group = "Verification"
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task contract(type: Test) {
    group = 'Delivery pipeline'
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/dg/docassembly/**"
    systemProperty 'pact.rootDir', "pacts"
    environment("APPINSIGHTS_INSTRUMENTATIONKEY", "test-key")
}

task runAndPublishConsumerPactTests(type: Test){
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath

}

task fortifyScan(type: JavaExec)  {
    main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
    classpath += sourceSets.test.runtimeClasspath
    jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

runAndPublishConsumerPactTests.dependsOn contract

runAndPublishConsumerPactTests.finalizedBy pactPublish

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

serenity {
    reports = ["single-page-html"]
}

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        version = project.pactVersion
    }
}

pactPublish {
    pactPublish = project.pact.publish
}

compileJava.dependsOn processResources

pitest {

    logger.lifecycle("Runs PIT  Tests")

    targetClasses = ['uk.gov.hmcts.reform.dg.docassembly.*']

    excludedClasses = [
            'uk.gov.hmcts.reform.dg.docassembly.appinsights.*' ,
            'uk.gov.hmcts.reform.dg.docassembly.info.*',
            'uk.gov.hmcts.reform.dg.docassembly.Application.java'
    ]

    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    threads = 15
    testSourceSets = [sourceSets.test, sourceSets.integrationTest]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml','json')
    outputFormats = ['XML', 'HTML','CSV']
    mutationThreshold = 5
    coverageThreshold = 0
    jvmArgs = ['-Xms1G','-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true
    junit5PluginVersion = '1.2.1'
    pitestVersion = '1.17.3'
}

project.tasks['pitest'].group = "Verification"

jacocoTestReport {

    dependsOn test, integration
    executionData(test, integration)

    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }

}

def coverageExclusionList = [
        '**uk/gov/hmcts/reform/dg/docassembly/Application*',
        '**uk/gov/hmcts/reform/dg/docassembly/appinsights/*',
        '**uk/gov/hmcts/reform/dg/docassembly/dto/*',
        '**uk/gov/hmcts/reform/dg/docassembly/config/**/*',
        '**uk/gov/hmcts/reform/dg/docassembly/info/*',
]

project.tasks['sonarqube'].dependsOn test, jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.outputLocation}"
        property "sonar.exclusions", coverageExclusionList.join(", ")
        property "sonar.test.exclusions", "**/test/**"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"

        property "sonar.issue.ignore.multicriteria", "e1"
        property "sonar.issue.ignore.multicriteria.e1.ruleKey", "java:S2629"
        property "sonar.issue.ignore.multicriteria.e1.resourceKey", "src/main/java/uk/gov/hmcts/reform/dg/docassembly/**"
    }
}

task loadEnvSecrets() {
    doLast {
        if (!project.file('./.aat-env').exists()) {
            new ByteArrayOutputStream().withStream { os ->
                exec {
                    commandLine 'az', 'keyvault', 'secret', 'show', '--vault-name', 'dg-docassembly-aat', '-o', 'tsv', '--query', 'value', '--name', 'dg-docassembly-dot-env'
                    standardOutput = os
                }
                project.file('./.aat-env').write(new String(os.toString().replace('\n', '').decodeBase64(), java.nio.charset.StandardCharsets.UTF_8))
            }
        }
    }
}

task reloadEnvSecrets(group: 'ccd tasks', dependsOn: [loadEnvSecrets]) {
    doFirst {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').delete()
        }
    }
}

bootRun {
    doFirst() {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').readLines().each() {
                def index = it.indexOf("=")
                def key = it.substring(0, index)
                def value = it.substring(index + 1)
                environment key, value
            }
        }
    }
}

functional {
    doFirst() {
        if (project.file('./.aat-env').exists()) {
            project.file('./.aat-env').readLines().each() {
                def index = it.indexOf("=")
                def key = it.substring(0, index)
                def value = it.substring(index + 1)
                environment key, value
            }
        }
    }
}

bootWithCCD {
    dependsOn(loadEnvSecrets)

    doFirst() {
        project.file('./.aat-env').readLines().each() {
            def index = it.indexOf("=")
            def key = it.substring(0, index)
            def value = it.substring(index + 1)
            environment key, value
        }

        exec {
            commandLine 'docker', 'compose', '-f', 'src/cftlib/resources/docker-compose-local.yml', '-p', 'cftlib', 'up', '-d'
        }

    }
    environment 'DOC_ASSEMBLY_SERVER_PORT', '8081'
    environment 'DM_STORE_BASE_URL', 'http://localhost:4603'
    environment 'RSE_LIB_ADDITIONAL_DATABASES', 'evidence'
    environment 'DATA_STORE_S2S_AUTHORISED_SERVICES', 'ccd_gw,ccd_data,ccd_ps,aac_manage_case_assignment,ccd_case_document_am_api,am_role_assignment_service,hmc_cft_hearing_service,prl_citizen_frontend,xui_webapp'
    environment 'CASE_DOCUMENT_S2S_AUTHORISED_SERVICES', 'em_gw,dg_docassembly_api,ccd_case_document_am_api,ccd_gw,xui_webapp,ccd_data'
    environment 'S2S_URL', 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
    environment 'CASE_DOCUMENT_AM_API_S2S_SECRET','${CASE_DOCUMENT_AM_API_S2S_SECRET}'
    authMode = uk.gov.hmcts.rse.AuthMode.Local
}

// exclude the logback binding is coming in via cftlib
configurations.cftlibTestImplementation {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
}
