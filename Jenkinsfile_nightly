#!groovy

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'Document Assembly API',
        projectUrlStr: 'https://github.com/hmcts/rpa-dg-docassembly'
    ],
    pipelineTriggers([cron('21 10 * * *')]), // scheduling to trigger jenkins job
    parameters([
            string(name: 'SecurityRules',
                    defaultValue: 'http://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
                    description: 'The URL you want to run these tests against'),
    ])

])

@Library("Infrastructure")

def type = "java"
def product = "dg"
def component = "docassembly"

def secrets = [
        'rpa-${env}': [
                secret('em-s2s-token', 'FUNCTIONAL_TEST_CLIENT_S2S_TOKEN'),
                secret('show-oauth2-token', 'FUNCTIONAL_TEST_CLIENT_OAUTH_SECRET')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

def vaultOverrides = [
        'preview' : 'aat',
        'spreview': 'saat'
]

withNightlyPipeline(type , product, component) {
    enableDockerBuild()

    // Vars for Kubernetes
    env.IDAM_API_BASE_URI = 'https://idam-api.aat.platform.hmcts.net'
    env.OPEN_ID_API_BASE_URI = 'https://idam-web-public.aat.platform.hmcts.net/o'
    env.OIDC_ISSUER_BASE_URI = 'https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts'
    env.S2S_BASE_URI = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
    env.IDAM_WEBSHOW_WHITELIST = 'https://em-show-aat.service.core-compute-aat.internal/oauth2/callback'
    env.DM_STORE_APP_URL = 'http://dm-store-aat.service.core-compute-aat.internal'
    env.PACT_BROKER_FULL_URL = 'https://pact-broker.platform.hmcts.net'

    // Check URL
    env.TEST_URL = "https://dg-docassembly-staging.service.core-compute-aat.internal"

    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)

    enableFullFunctionalTest()
    enableSlackNotifications('#em-dev-chat')
    overrideVaultEnvironments(vaultOverrides)

}
